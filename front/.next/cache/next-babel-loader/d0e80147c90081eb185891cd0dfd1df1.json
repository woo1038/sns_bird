{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dngur\\\\Desktop\\\\porject\\\\sns\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    var _state$user$me2;\n\n    return (_state$user$me2 = state.user.me) === null || _state$user$me2 === void 0 ? void 0 : _state$user$me2.id;\n  }),\n      addCo = _useSelector.addCo;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onSubmitCommentText = _useInput2[1];\n  /* 글작성후 지워주기 */\n\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"reletive\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onSubmitCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40,\n          cursor: \"pointer\",\n          zIndex: 10\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"XxN6OLN1T0YBbDIlaC3DziqAlAs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/dngur/Desktop/porject/sns/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Button","Form","Input","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCo","commentText","onSubmitCommentText","useEffect","addPostDone","setText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","cursor","zIndex","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,EAAE,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,qBAAgBN,WAAW,CAAC,UAACO,KAAD;AAAA;;AAAA,8BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,oDAAW,gBAAeH,EAA1B;AAAA,GAAD,CAA3B;AAAA,MAAOI,KAAP,gBAAOA,KAAP;;AAEA,kBAA2CX,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,mBAApB;AAEA;;;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIC,WAAJ,EAAiB;AACfC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACD,WAAD,CAJM,CAAT;AAMA,MAAME,eAAe,GAAGtB,WAAW,CAAC,YAAM;AACxCuB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACE,EAAjB,EAAqBK,WAArB;AACAN,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEjB,mBADC;AAEPkB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEV,WAAX;AAAwBW,QAAAA,MAAM,EAAElB,IAAI,CAACE,EAArC;AAAyCiB,QAAAA,MAAM,EAAEjB;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACK,WAAD,EAAcL,EAAd,CANgC,CAAnC;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEd,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,QAAQ,EAAE,UADL;AAELE,UAAAA,KAAK,EAAE,CAFF;AAGLC,UAAAA,MAAM,EAAE,CAAC,EAHJ;AAILC,UAAAA,MAAM,EAAE,SAJH;AAKLC,UAAAA,MAAM,EAAE;AALH,SADT;AAQE,QAAA,IAAI,EAAC,SARP;AASE,QAAA,QAAQ,EAAC,QATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA9CD;;GAAM1B,W;UACaF,W,EACND,W,EACKA,W,EAE2BD,Q;;;KALvCI,W;AAgDNA,WAAW,CAAC2B,SAAZ,GAAwB;AACtB1B,EAAAA,IAAI,EAAET,SAAS,CAACoC,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe7B,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const {addCo} = useSelector((state) => state.user.me?.id);\r\n\r\n  const [commentText, onSubmitCommentText] = useInput(\"\");\r\n  \r\n  /* 글작성후 지워주기 */\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"reletive\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onSubmitCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          style={{\r\n            position: \"absolute\",\r\n            right: 0,\r\n            bottom: -40,\r\n            cursor: \"pointer\",\r\n            zIndex: 10,\r\n          }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          작성\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}