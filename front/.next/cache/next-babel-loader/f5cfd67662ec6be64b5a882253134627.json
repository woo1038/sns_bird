{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dngur\\\\Desktop\\\\porject\\\\sns\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onSubmitCommentText] = useInput(\"\");\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"reletive\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onSubmitCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute'\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/dngur/Desktop/porject/sns/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Button","Form","Input","useInput","useSelector","CommentForm","post","id","state","user","me","commentText","onSubmitCommentText","onSubmitComment","console","log","position","margin","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,EAAE,GAAGH,WAAW,CAAEI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AAEA,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCT,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMU,eAAe,GAAGf,WAAW,CAAC,MAAM;AACxCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACD,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEN,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACI,UAAAA,QAAQ,EAAE;AAAX,SAAf;AAAuC,QAAA,IAAI,EAAC,SAA5C;AAAsD,QAAA,QAAQ,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;AAyBAX,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAef,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  const [commentText, onSubmitCommentText] = useInput(\"\");\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n  }, [commentText]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"reletive\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onSubmitCommentText}\r\n          rows={4}\r\n        />\r\n        <Button style={{position: 'absolute'}} type=\"primary\" htmlType=\"submit\">\r\n          작성\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}