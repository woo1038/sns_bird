{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dngur\\\\Desktop\\\\porject\\\\sns\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var imageInput = useRef();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1];\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n  }, []);\n\n  var onClickImageUpload = function onClickImageUpload() {\n    imageInput.current.Click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC624\\uB298\\uC758 \\uAE30\\uBD84\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC5EC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: v,\n            style: {\n              display: \"inline-block\"\n            }\n          }, v, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"4Jymrvg8uD+lpvSiAmjdTC5H7LI=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = PostForm;\nPostForm.propTypes = {};\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/dngur/Desktop/porject/sns/front/components/PostForm.js"],"names":["React","useCallback","useRef","useState","PropTypes","Form","Button","Input","useSelector","useDispatch","addPost","useInput","PostForm","dispatch","state","post","imagePaths","imageInput","text","onChangeText","onSubmit","onClickImageUpload","current","Click","map","v","display","propTypes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,qBAAuBD,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AACA,MAAMC,UAAU,GAAGf,MAAM,EAAzB;;AAEA,kBAA6BS,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,YAAb;;AAEA,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,YAAM;AACjCY,IAAAA,QAAQ,CAACH,OAAD,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;;AAGA,MAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BJ,IAAAA,UAAU,CAACK,OAAX,CAAmBC,KAAnB;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,QAAhB;AAAA,4BACE,QAAC,KAAD,CAAO,QAAP;AACE,MAAA,KAAK,EAAEF,IADT;AAEE,MAAA,QAAQ,EAAEC,YAFZ;AAGE,MAAA,SAAS,EAAE,GAHb;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEI,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAE,mBAAO;AAAT,SAA9B;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAcE;AAAA,gBACGL,UAAU,CAACQ,GAAX,CAAe,UAACC,CAAD;AAAA,4BACd;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAApB;AAAA,kCACE;AAAa,YAAA,GAAG,EAAED,CAAlB;AAAqB,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX;AAA5B,aAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,OAAf;AADH;AAAA;AAAA;AAAA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAvCD;;GAAMb,Q;UACaH,W,EACMD,W,EAGMG,Q;;;KALzBC,Q;AAyCNA,QAAQ,CAACe,SAAT,GAAqB,EAArB;AAEA,eAAef,QAAf","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { addPost } from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n\r\n  const [text, onChangeText] = useInput(\"\");\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost);\r\n  }, []);\r\n  const onClickImageUpload = () => {\r\n    imageInput.current.Click();\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={onSubmit}>\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"오늘의 기분을 적어주세여\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          작성\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img key={v} alt={v} style={{ display: \"inline-block\" }} />\r\n            <div>제거</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}